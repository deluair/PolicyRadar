version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15
    container_name: policyradar_postgres
    environment:
      POSTGRES_DB: policyradar
      POSTGRES_USER: policyradar
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U policyradar -d policyradar"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: policyradar_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PolicyRadar API
  api:
    build: .
    container_name: policyradar_api
    environment:
      - DATABASE_URL=postgresql://policyradar:password@postgres:5432/policyradar
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=true
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./models:/app/models
    command: uvicorn app.api.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PolicyRadar Dashboard
  dashboard:
    build: .
    container_name: policyradar_dashboard
    environment:
      - DATABASE_URL=postgresql://policyradar:password@postgres:5432/policyradar
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "8501:8501"
    depends_on:
      - api
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    command: streamlit run app/dashboard/main.py --server.port 8501 --server.address 0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Data generation service
  data-generator:
    build: .
    container_name: policyradar_data_generator
    environment:
      - DATABASE_URL=postgresql://policyradar:password@postgres:5432/policyradar
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./data:/app/data
    command: python scripts/generate_synthetic_data.py
    profiles:
      - data-generation

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: policyradar_network 